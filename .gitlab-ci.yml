stages:
  - train
  - clean_up

train-model:
  stage: train
  script:
    - echo "## Training...."
    - echo "$CI_PROJECT_PATH"
    - echo "$CI_COMMIT_BRANCH" 
    - echo "$CI_PROJECT_DIR" 
    - echo "$CI_BUILDS_DIR" 
    # - raise error
    
    - Invoke-WebRequest -URI "https://avc-api.azurewebsites.net/api/model/$CI_COMMIT_BRANCH/trainning" -UseBasicParsing -Method Put

    #Unzip
    - tar -xf traindata.zip
    - cd labels 
    - move *.txt ..\imgs 
    - cd ..

    - cd D:\Docker\AVC-EdgeTPU-Compiler\edgetpu-compiler\x64\data
    - if( Test-Path -Path imgs) {rm -r -Force imgs}

    - move $CI_PROJECT_DIR/imgs imgs
    - cd ..

    #Create_train_test_file
    - conda run -n yolo2keras_env python create_train_test.py -tp 0.2
    #get_applying_id
    - $APPLYING_ID = (Invoke-WebRequest -URI https://avc-api.azurewebsites.net/api/model/applyingid -UseBasicParsing).Content

    #Train_model
    - cp D:\Docker\AVC-EdgeTPU-Compiler\edgetpu-compiler\models\$APPLYING_ID.weights .
    # - Start-Process -NoNewWindow -Wait -FilePath "C:\Program Files\Docker\Docker\Docker Desktop.exe" 
    - Start-Process -NoNewWindow -Wait -FilePath "D:\Docker\AVC-EdgeTPU-Compiler\edgetpu-compiler\x64\darknet.exe" -ArgumentList "detector train data/custom.data coco-tiny-v3-relu.cfg $APPLYING_ID.weights -map -clear"

    - cd backup
    - Rename-Item -Path "coco-tiny-v3-relu_best.weights" -NewName "$CI_COMMIT_BRANCH.weights" -Force
    - cd ..\..
    - Move-Item -Path x64\backup\$CI_COMMIT_BRANCH.weights -Destination models -Force
    - cd keras-yolo3
    - conda run -n yolo2keras_env python convert.py coco-tiny-v3-relu.cfg ..\models\$CI_COMMIT_BRANCH.weights avc.h5

    #Convert_tflite
    - conda run -n tflite_env python keras_to_tflite_quant.py avc.h5 ..\avc_model.tflite

    - cd ..
    - docker run --rm -v ${pwd}:/home/edgetpu edgetpu-compiler-avc edgetpu_compiler avc_model.tflite
    - Rename-Item -Path "avc_model_edgetpu.tflite" -NewName "$CI_COMMIT_BRANCH.tflite"
    - Move-Item -Path "$CI_COMMIT_BRANCH.tflite" -Destination "$CI_PROJECT_DIR" -Force

    - Remove-Item avc_model.tflite


    # Push new model back to the repository.
    - cd $CI_PROJECT_DIR
    - git config --global user.email "sangnvse130361@fpt.edu.vn"
    - git config --global user.name "Sang Ngo"
    - git add .
    - git commit -m "Trained successfully"
    - git remote show origin
    # - git remote rm origin
    - git remote set-url --push origin git@gitlab.com:$CI_PROJECT_PATH
    - ssh-keyscan www.gitlab.com >> C:\Users\Shang\.ssh\known_hosts
    # - git remote set-url --fetch origin git@gitlab.com:$CI_PROJECT_PATH
    - git remote show origin
    - git push --follow-tags origin HEAD:$CI_COMMIT_REF_NAME -o ci.skip
    - Invoke-WebRequest -URI "https://avc-api.azurewebsites.net/api/model/$CI_COMMIT_BRANCH/succession" -UseBasicParsing -Method Put
  tags:
    - worker
  except:
    - default
    - master



handle_error:
  stage: clean_up
  script:
    - echo "Clear mÃ¡y cho Sang"
    - Invoke-WebRequest -URI "https://avc-api.azurewebsites.net/api/model/$CI_COMMIT_BRANCH/failure" -UseBasicParsing -Method Put
  when: on_failure
  tags:
    - worker
  except:
    - default
    - master

test_git: 
  stage: train
  script: 
    - ssh-add 
    - git config --global user.email "huytmse130336@fpt.edu.vn"
    - git config --global user.name "Minh Huy"
    - echo "Hello" >> test.txt
    - git add .
    - git commit -m "Trained successfully"
    - git remote show origin
    - git remote set-url --push origin git@gitlab.com:$CI_PROJECT_PATH
    - git push --follow-tags origin HEAD:$CI_COMMIT_REF_NAME -o ci.skip
  tags:
    - kay
